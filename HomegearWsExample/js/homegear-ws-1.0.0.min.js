homegearWsSetTimeout=function(c,a){var b=this,d=Array.prototype.slice.call(arguments,2);return setTimeout(c instanceof Function?function(){c.apply(b,d)}:c,a)};function HomegearWS(e,c,f,b,a,d){this.host=(typeof e!=="string")?"localhost":e;this.port=(typeof c!=="undefined")?c:"2001";this.id=(typeof f!=="undefined")?f:"HomegearWS";this.id+="-"+this.getGuid();this.ssl=(typeof b!=="undefined")?(b==="true"||b===true):false;this.auth=a?true:false;this.user=(typeof a!=="undefined")?a:undefined;this.password=(typeof d!=="undefined"&&d!=="")?d:undefined;this.client=null;this.authenticated=!this.auth;this.onEvent=Array();this.onReady=Array();this.onError=Array();this.peers=Array();this.enabled=false;this.messageCounter=1;this.requests={};this.sending=false;this.connectTimer=null;this.log=typeof(log)==="undefined"?false:log}HomegearWS.prototype.connect=function(){console.log("Connecting (My ID: "+this.id+")...");this.disconnect();this.enabled=true;this.connectClient()};HomegearWS.prototype.disconnect=function(){this.enabled=false;this.sending=false;if(this.client){this.client.close();this.client=null}};HomegearWS.prototype.error=function(a){if(typeof a==="function"){this.onError.push(a)}};HomegearWS.prototype.invokeError=function(a){if(typeof a==="undefined"){return}console.log("Error: "+a);for(i in this.onError){if(typeof this.onError[i]==="function"){this.onError[i](a)}}};HomegearWS.prototype.ready=function(a){if(typeof a==="function"){this.onReady.push(a)}};HomegearWS.prototype.invokeReady=function(){console.log("Ready.");for(i in this.onReady){if(typeof this.onReady[i]==="function"){this.onReady[i]()}}};HomegearWS.prototype.event=function(a){if(typeof a==="function"){this.onEvent.push(a)}};HomegearWS.prototype.invokeEvent=function(a){if(this.log){console.log("Event:",a)}for(i in this.onEvent){if(typeof this.onEvent[i]==="function"){this.onEvent[i](a)}}};HomegearWS.prototype.connectClient=function(){this.client=new WebSocket(((this.ssl)?"wss://":"ws://")+this.host+":"+this.port+"/"+this.id,"server2");this.client.onmessage=function(a){packet=JSON.parse(a.data);if("auth" in packet){this.sending=false;if(packet.auth=="success"){console.log("Authenticated.");this.authenticated=true;this.subscribePeers()}else{this.invokeError("Authentication failed.")}}else{if(typeof packet.method!=="undefined"){request={};this.client.send(JSON.stringify(request));this.invokeEvent(packet)}else{if(typeof packet.id!=="undefined"&&typeof this.requests["c"+packet.id]==="function"){this.sending=false;if(this.log){console.log("Response to id "+packet.id+" received: "+a.data)}this.requests["c"+packet.id](packet);delete this.requests["c"+packet.id]}else{this.sending=false}}}}.bind(this);this.client.onopen=function(a){if(this.auth){request={user:this.user,password:this.password};this.send(JSON.stringify(request))}else{this.subscribePeers()}}.bind(this);this.client.onclose=function(a){if(this.auth){this.authenticated=false}if(this.enabled){this.client=null;clearTimeout(this.connectTimer);this.connectTimer=homegearWsSetTimeout.call(this,this.connectClient,5000);this.invokeError("Disconnected.")}}.bind(this);this.client.onerror=function(a){this.client=null;if(this.auth){this.authenticated=false}clearTimeout(this.connectTimer);this.connectTimer=homegearWsSetTimeout.call(this,this.connectClient,5000);this.invokeError(a.data)}.bind(this)};HomegearWS.prototype.getTwoRandomHeyBytes=function(){return Math.floor((1+Math.random())*65536).toString(16).substring(1)};HomegearWS.prototype.getGuid=function(){return this.getTwoRandomHeyBytes()+this.getTwoRandomHeyBytes()+"-"+this.getTwoRandomHeyBytes()+"-"+this.getTwoRandomHeyBytes()+"-"+this.getTwoRandomHeyBytes()+"-"+this.getTwoRandomHeyBytes()+this.getTwoRandomHeyBytes()+this.getTwoRandomHeyBytes()};HomegearWS.prototype.addPeers=function(c){if(!c.constructor===Array){return}var a=Array();for(i in c){var b=this.peers.indexOf(c[i]);if(b==-1){a.push(c[i]);this.peers.push(c[i])}}if(!this.isReady()||a.length==0){return}if(this.log){console.log("Subscribing to peers:",a)}this.send(JSON.stringify({id:this.messageCounter++,method:"subscribePeers",params:[this.id,a]}))};HomegearWS.prototype.removePeers=function(b){if(!b.constructor===Array){return}var c=Array();for(i in b){var a=this.peers.indexOf(b[i]);if(a!=-1){c.push(b[i]);this.peers.splice(a,1)}}if(!this.isReady()||c.length==0){return}this.send(JSON.stringify({id:this.messageCounter++,method:"unsubscribePeers",params:[this.id,c]}))};HomegearWS.prototype.addPeer=function(b){var a=this.peers.indexOf(b);if(a>-1){return}this.peers.push(b);if(!this.isReady()){return}if(this.log){console.log("Subscribing to peer "+b)}this.send(JSON.stringify({id:this.messageCounter++,method:"subscribePeers",params:[this.id,[b]]}))};HomegearWS.prototype.removePeer=function(b){var a=this.peers.indexOf(b);if(a>-1){this.peers.splice(a,1)}if(!this.isReady()){return}this.send(JSON.stringify({id:this.messageCounter++,method:"unsubscribePeers",params:[this.id,[b]]}))};HomegearWS.prototype.isReady=function(){return this.client&&this.client.readyState===WebSocket.OPEN&&this.authenticated};HomegearWS.prototype.subscribePeers=function(){if(!this.isReady()){return}if(this.log){console.log("Subscribing to peers (2):",this.peers)}this.send(JSON.stringify({id:this.messageCounter++,method:"subscribePeers",params:[this.id,this.peers]}));this.invokeReady()};HomegearWS.prototype.send=function(a){if(this.sending){homegearWsSetTimeout.call(this,this.send,0,a);return}this.sending=true;if(this.client){this.client.send(a)}};HomegearWS.prototype.invoke=function(b){if(!this.isReady()){return}var a=this.messageCounter++;if(typeof arguments[0]==="object"&&typeof arguments[0].method!=="undefined"){if(typeof arguments[1]==="function"){this.requests["c"+a]=arguments[1]}arguments[0].id=a;var c=JSON.stringify(arguments[0]);if(this.log){console.log("Invoking RPC method: "+c)}this.send(c)}else{if(typeof b!=="string"){return}var c={jsonrpc:"2.0",method:b,id:a};if(arguments.length>1&&typeof arguments[1]==="function"){this.requests["c"+a]=arguments[1]}if(arguments.length>2){c.params=Array.prototype.slice.call(arguments,2)}c=JSON.stringify(c);if(this.log){console.log("Invoking RPC method: "+c)}this.send(c)}};